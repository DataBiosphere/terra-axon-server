openapi: 3.0.3
info:
  title: Terra Axon Server
  description: |
    Terra Axon Server

  version: 0.0.1

paths:
  # Unauthenticated Paths
  /status:
    get:
      security: [ ]
      summary: Returns the operational status of the service
      operationId: serviceStatus
      tags: [ Public ]
      responses:
        '200':
          description: Service can process requests
        '500':
          description: |
            Service cannot process requests. That might be because dependent services are
            unavailable, or because there is a problem with the service itself.

  /version:
    get:
      security: [ ]
      summary: Returns the deployed version of the service
      operationId: serviceVersion
      tags: [ Public ]
      responses:
        '200':
          description: Version properties
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VersionProperties'

  /api/auth/exchangeAuthorizationCode:
    parameters:
      - $ref: '#/components/parameters/AuthCode'
    post:
      summary: |
        Exchange an authorization code for an access token and refresh token.
      operationId: exchangeAuthCode
      tags: [ Authorization ]
      responses:
        '200':
          $ref: '#/components/responses/ApiTokenResultResponse'
        '400':
          $ref: '#/components/responses/BadRequest'
        '403':
          $ref: '#/components/responses/PermissionDenied'
        '500':
          $ref: '#/components/responses/ServerError'
  /api/auth/refreshToken:
    parameters:
      - $ref: '#/components/parameters/RefreshToken'
    post:
      summary: |
        Pass in a refresh token to receive an access token
      operationId: getRefreshedAccessToken
      tags: [ Authorization ]
      responses:
        '200':
          $ref: '#/components/responses/ApiTokenResultResponse'
        '400':
          $ref: '#/components/responses/BadRequest'
        '403':
          $ref: '#/components/responses/PermissionDenied'
        '500':
          $ref: '#/components/responses/ServerError'

components:
  schemas:
    # Please keep alphabetized
    ApiTokenReport:
      type: object
      required: [ accessToken, tokenType ]
      properties:
        accessToken:
          type: string
        expiresIn:
          type: number
        tokenType:
          type: string
        scope:
          type: string
        refreshToken:
          type: string
        idToken:
          type: string
#    ApiTokenResult:
#      type: object
#      description: |
#        The result of the token request
#      properties:
#        tokenReport:
#          $ref: '#/components/schemas/ApiTokenReport'
#        errorReport:
#          $ref: '#/components/schemas/ErrorReport'
    AuthorizationCode:
      description: Authorization code provided by Google.
      type: string

    ErrorReport:
      type: object
      required: [ message, statusCode, causes ]
      properties:
        message:
          type: string
        statusCode:
          type: integer
        causes:
          type: array
          items:
            type: string

    VersionProperties:
      type: object
      required: [ gitTag, gitHash, github, build ]
      properties:
        gitTag:
          type: string
          description: Git tag of currently deployed app.
        gitHash:
          type: string
          description: Git hash of currently deployed app.
        github:
          type: string
          description: Github link to currently deployed commit.
        build:
          type: string
          description: Version of the currently deployed app declared in build.gradle. Client and server versions are linked.

  parameters:
    AuthCode:
      name: authCode
      in: query
      required: true
      description: Authorization code provided by Google.
      schema:
        $ref: '#/components/schemas/AuthorizationCode'

    RefreshToken:
      name: refreshToken
      in: query
      required: true
      description: Refresh token generated from initial call.
      schema:
        type: string
        description: Refresh token provided.

  responses:
    # Keep alphabetized please
    ApiTokenResultResponse:
      description: Result of a token request (Success or failure)
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ApiTokenReport'
    BadRequest:
      description: Bad request
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorReport'

    Conflict:
      description: Request conflicts with current state
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorReport'

    PermissionDenied:
      description: Permission denied
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorReport'

    ServerError:
      description: Server error
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorReport'

  securitySchemes:
    authorization:
      type: oauth2
      flows:
        implicit:
          authorizationUrl: https://accounts.google.com/o/oauth2/auth
          scopes:
            openid: open id authorization
            email: email authorization
            profile: profile authorization
    bearerAuth:
      type: http
      scheme: bearer

security:
  - authorization: [ openid, email, profile ]
  - bearerAuth: [ ]
