dependencies {
    implementation 'io.swagger.core.v3:swagger-annotations'
    runtimeOnly 'org.webjars.npm:swagger-ui-dist:4.9.0'
    swaggerCodegen 'io.swagger.codegen.v3:swagger-codegen-cli'

    // Jersey rest API client used by open api
    // Version controlled by dependency management plugin
    implementation 'org.glassfish.jersey.core:jersey-client'
    implementation 'com.fasterxml.jackson.datatype:jackson-datatype-jsr310'
    implementation 'org.glassfish.jersey.media:jersey-media-json-jackson'
    implementation 'org.glassfish.jersey.media:jersey-media-multipart'


    // Versioned by Spring
    implementation 'javax.validation:validation-api'
    implementation 'org.webjars:webjars-locator-core'
    annotationProcessor 'org.springframework.boot:spring-boot-configuration-processor'
}

def artifactGroup = "${group}"

// download calhoun openapi yaml
def calhounSwaggerUrl = 'http://raw.githubusercontent.com/DataBiosphere/calhoun/c189957aa4d44e7573ec4d6ed800149484f7ebb3/static/api-docs.yaml'
def calhounSwaggerFile = "${buildDir}/calhoun-openapi.yaml"
task downloadCalhounSwagger(type: Download) {
    src calhounSwaggerUrl
    dest calhounSwaggerFile
}

swaggerSources {
    // generate axonserver openapi rest api controller interfaces
    axonserver {
        inputFile = file('../service/src/main/resources/api/openapi.yml')
        code {
            language = 'spring'
            components = [
                    apiDocs  : false, apiTests: false,
                    modelDocs: false, modelTests: false
            ]
            additionalProperties = [
                    modelPackage       : "${artifactGroup}.axonserver.model",
                    apiPackage         : "${artifactGroup}.axonserver.api",
                    dateLibrary        : 'java11',
                    java8              : true,
                    interfaceOnly      : 'true',
                    useTags            : 'true',
                    errorOnUnknownEnums: 'true',
                    springBootVersion  : dependencyManagement.managedVersions['org.springframework.boot:spring-boot'],
                    modelNamePrefix    : 'Api'
            ]
        }
    }
    // generate calhoun openapi rest api java client
    // https://github.com/DataBiosphere/Calhoun
    calhoun {
        inputFile = file(calhounSwaggerFile)
        code {
            language = 'java'
            library = 'jersey2'
            components = [
                apiDocs  : false, apiTests: false,
                modelDocs: false, modelTests: false
            ]
            additionalProperties = [
                apiPackage    : "${artifactGroup}.calhoun.api",
                invokerPackage: "${artifactGroup}.calhoun.client",
                dateLibrary   : 'java11',
                java8         : true,
                errorOnUnknownEnums: 'true'
            ]
        }
    }
    // generate cromwell java openapi client from modified version of https://raw.githubusercontent.com/broadinstitute/cromwell/83/engine/src/main/resources/swagger/cromwell.yaml
    // Diff from source:
    /*
962a963
>       # Fixed call metadata yml specification - (PF-2651)
964c965,969
<         $ref: '#/definitions/CallMetadata'
---
>         type: object
>         additionalProperties:
>           type: array
>           items:
>             $ref: "#/definitions/CallMetadata"
1400a1406,1410
>       # Fixed label response in query result - (PF-2672)
>       labels:
>         type: object
>         additionalProperties:
>           type: string
1433a1444
>   # Fixed label response yml specification - (PF-2651)
1434a1446
>     type: object
1442d1453
<         example: label-key-1
1444,1446c1455,1458
<         type: string
<         description: The labels which have been updated
<         example: label-value-1
---
>         type: object
>         additionalProperties:
>           type: string
>

     */
    cromwell {
        inputFile = file('../service/src/main/resources/api/cromwell-openapi.yaml')
        code {
            language = 'java'
            library = 'jersey2'
            components = [
                    apiDocs  : false, apiTests: false,
                    modelDocs: false, modelTests: false
            ]
            additionalProperties = [
                    apiPackage    : "${artifactGroup}.cromwell.api",
                    invokerPackage: "${artifactGroup}.cromwell.client",
                    dateLibrary   : 'java11',
                    java8         : true,
                    errorOnUnknownEnums: 'true',
                    modelNamePrefix    : 'CromwellApi'
            ]
        }
    }
}

// https://github.com/int128/gradle-swagger-generator-plugin/issues/221
swaggerSources.all {
    code.jvmArgs = ['--add-opens=java.base/java.util=ALL-UNNAMED']
}

sourceSets.main.java.srcDir "${buildDir}/swagger-code-axonserver/src/main/java"
sourceSets.main.java.srcDir "${buildDir}/swagger-code-calhoun/src/main/java"
sourceSets.main.java.srcDir "${buildDir}/swagger-code-cromwell/src/main/java"

generateSwaggerCodeCalhoun.dependsOn downloadCalhounSwagger
spotlessJava.dependsOn generateSwaggerCode
compileJava.dependsOn generateSwaggerCode

// see https://github.com/n0mer/gradle-git-properties
gitProperties {
    keys = []
    customProperty('axonserver.version.gitTag', { it.describe(tags: true) })
    customProperty('axonserver.version.gitHash', { it.head().abbreviatedId })
    customProperty('axonserver.version.github', { "https://github.com/DataBiosphere/terra-axon-server/tree/${it.describe(tags: true)}" })
    customProperty('axonserver.version.build', version)
}
